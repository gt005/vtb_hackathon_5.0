# Generated by Django 4.2.6 on 2023-10-14 10:27

from django.db import migrations, models
import django.db.models.deletion
from project.apps.nearest_bank_api.domain.emums import ServiceNameEnum


class Migration(migrations.Migration):

    dependencies = [
        ('nearest_bank_api', '0002_atm_alter_openhours_options_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AtmServiceThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workload', models.IntegerField(blank=True, null=True, verbose_name='Временная загруженность')),
                ('serviceCapability', models.CharField(choices=[('SUPPORTED', 'SUPPORTED'), ('UNKNOWN', 'UNKNOWN'), ('UNSUPPORTED', 'UNSUPPORTED')], max_length=50)),
                ('serviceActivity', models.CharField(choices=[('AVAILABLE', 'AVAILABLE'), ('UNAVAILABLE', 'UNAVAILABLE'), ('UNKNOWN', 'UNKNOWN')], max_length=50)),
                ('atm', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nearest_bank_api.atm')),
            ],
            options={
                'verbose_name': 'Сервис Банкомата через',
            },
        ),
        migrations.CreateModel(
            name='SalePointServiceThrough',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('workload', models.IntegerField(blank=True, null=True, verbose_name='Временная загруженность')),
                ('serviceCapability', models.CharField(choices=[('SUPPORTED', 'SUPPORTED'), ('UNKNOWN', 'UNKNOWN'), ('UNSUPPORTED', 'UNSUPPORTED')], max_length=50)),
                ('serviceActivity', models.CharField(choices=[('AVAILABLE', 'AVAILABLE'), ('UNAVAILABLE', 'UNAVAILABLE'), ('UNKNOWN', 'UNKNOWN')], max_length=50)),
                ('sale_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nearest_bank_api.salepoint')),
            ],
            options={
                'verbose_name': 'Сервис отделения через',
            },
        ),
        migrations.CreateModel(
            name='Service',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(choices=[('supportsEur', 'supportsEur'), ('supportsRub', 'supportsRub'), ('supportsUsd', 'supportsUsd'), ('supportsChargeRub', 'supportsChargeRub'), ('blind', 'blind'), ('nfcForBankCards', 'nfcForBankCards'), ('qrRead', 'qrRead'), ('wheelchair', 'wheelchair')], max_length=50, unique=True, verbose_name='Имя сервиса')),
                ('description', models.TextField(blank=True, null=True, verbose_name='Описание')),
                ('onlineText', models.TextField(blank=True, null=True, verbose_name='Онлайн текст')),
            ],
            options={
                'verbose_name': 'Предоставляемый сервис',
            },
        ),
        migrations.DeleteModel(
            name='AtmService',
        ),
        migrations.AddField(
            model_name='salepointservicethrough',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nearest_bank_api.service'),
        ),
        migrations.AddField(
            model_name='atmservicethrough',
            name='service',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='nearest_bank_api.service'),
        ),
        migrations.AddField(
            model_name='atm',
            name='services',
            field=models.ManyToManyField(related_name='atms', through='nearest_bank_api.AtmServiceThrough', to='nearest_bank_api.service'),
        ),
        migrations.AddField(
            model_name='salepoint',
            name='services',
            field=models.ManyToManyField(related_name='sale_points', through='nearest_bank_api.SalePointServiceThrough', to='nearest_bank_api.service'),
        ),
        migrations.AlterUniqueTogether(
            name='salepointservicethrough',
            unique_together={('sale_point', 'service')},
        ),
        migrations.AlterUniqueTogether(
            name='atmservicethrough',
            unique_together={('atm', 'service')},
        ),
    ]
